clear; % clear CommandWindow and workspace
 sayac=0;
 AGS=zeros(3,1);
 eps=1e-8;% for sedumi
 bigeps=eps;% for sedumi
 maxiter=400;% for sedumi
 degrees=1:20;
 timescale=1;
 tolerance=0;
 


 n=2;%the dimension of the state space
 hold on
         G = @(y)(0.1E1+y(1).^2).^3.*(0.1E1+y(2).^2).^3;
  F1=@(y)0.290959E-1.*((-0.128443E0)+(-0.843747E-1).*y(1)+(-0.90828E0).*y( ...
  1).^2+0.632376E0.*y(1).^3+(-0.138131E1).*y(1).^4+0.125894E1.*y(1) ...
  .^5+(-0.601471E0).*y(1).^6+0.542187E0.*y(1).^7+0.457813E0.*y(2)+ ...
  0.789014E0.*y(1).*y(2)+0.131484E1.*y(1).^2.*y(2)+0.755491E-1.*y(1) ...
  .^3.*y(2)+(-0.297394E0).*y(1).^4.*y(2)+(-0.191641E1).*y(1).^5.*y( ...
  2)+(-0.115442E1).*y(1).^6.*y(2)+(-0.120294E1).*y(1).^7.*y(2)+( ...
  -0.178366E0).*y(2).^2+0.263291E0.*y(1).*y(2).^2+0.232927E1.*y(1) ...
  .^2.*y(2).^2+0.643642E1.*y(1).^3.*y(2).^2+0.444479E1.*y(1).^4.*y( ...
  2).^2+0.664528E1.*y(1).^5.*y(2).^2+0.193716E1.*y(1).^6.*y(2).^2+ ...
  0.472145E0.*y(1).^7.*y(2).^2+0.14335E1.*y(2).^3+(-0.713465E0).*y( ...
  1).*y(2).^3+0.171112E1.*y(1).^2.*y(2).^3+(-0.114194E1).*y(1).^3.* ...
  y(2).^3+0.43005E1.*y(1).^4.*y(2).^3+(-0.114194E1).*y(1).^5.*y(2) ...
  .^3+0.402288E1.*y(1).^6.*y(2).^3+(-0.713465E0).*y(1).^7.*y(2).^3+ ...
  0.178366E0.*y(2).^4+0.227473E1.*y(1).*y(2).^4+0.265062E1.*y(1) ...
  .^2.*y(2).^4+0.470261E1.*y(1).^3.*y(2).^4+0.551499E1.*y(1).^4.*y( ...
  2).^4+0.491146E1.*y(1).^5.*y(2).^4+0.304273E1.*y(1).^6.*y(2).^4+ ...
  0.248359E1.*y(1).^7.*y(2).^4+0.457813E0.*y(2).^5+(-0.120294E1).*y( ...
  1).*y(2).^5+0.298567E1.*y(1).^2.*y(2).^5+(-0.191641E1).*y(1).^3.* ...
  y(2).^5+0.304427E1.*y(1).^4.*y(2).^5+0.755491E-1.*y(1).^5.*y(2) ...
  .^5+0.516415E0.*y(1).^6.*y(2).^5+0.789014E0.*y(1).^7.*y(2).^5+ ...
  0.128443E0.*y(2).^6+0.373438E0.*y(1).*y(2).^6+(-0.876974E-1).*y(1) ...
  .^2.*y(2).^6+0.252369E1.*y(1).^3.*y(2).^6+(-0.610648E0).*y(1).^4.* ...
  y(2).^6+0.315025E1.*y(1).^5.*y(2).^6+(-0.394507E0).*y(1).^6.*y(2) ...
  .^6+0.1E1.*y(1).^7.*y(2).^6);

  F2=@(y)(-0.373717E-2)+0.133205E-1.*y(1)+(-0.518973E-2).*y(1).^2+ ...
  0.41709E-1.*y(1).^3+0.518973E-2.*y(1).^4+0.133205E-1.*y(1).^5+ ...
  0.373717E-2.*y(1).^6+(-0.245496E-2).*y(2)+0.229571E-1.*y(1).*y(2)+ ...
  0.766068E-2.*y(1).^2.*y(2)+(-0.207589E-1).*y(1).^3.*y(2)+ ...
  0.661854E-1.*y(1).^4.*y(2)+(-0.350007E-1).*y(1).^5.*y(2)+ ...
  0.108655E-1.*y(1).^6.*y(2)+(-0.264272E-1).*y(2).^2+0.382563E-1.*y( ...
  1).*y(2).^2+0.677721E-1.*y(1).^2.*y(2).^2+0.497867E-1.*y(1).^3.*y( ...
  2).^2+0.771222E-1.*y(1).^4.*y(2).^2+0.868707E-1.*y(1).^5.*y(2).^2+ ...
  (-0.255164E-2).*y(1).^6.*y(2).^2+0.183996E-1.*y(2).^3+ ...
  0.219817E-2.*y(1).*y(2).^3+0.187274E0.*y(1).^2.*y(2).^3+( ...
  -0.332257E-1).*y(1).^3.*y(2).^3+0.136827E0.*y(1).^4.*y(2).^3+( ...
  -0.557596E-1).*y(1).^5.*y(2).^3+0.73429E-1.*y(1).^6.*y(2).^3+( ...
  -0.401904E-1).*y(2).^4+(-0.865295E-2).*y(1).*y(2).^4+0.129325E0.* ...
  y(1).^2.*y(2).^4+0.125127E0.*y(1).^3.*y(2).^4+0.160464E0.*y(1) ...
  .^4.*y(2).^4+0.885758E-1.*y(1).^5.*y(2).^4+(-0.177673E-1).*y(1) ...
  .^6.*y(2).^4+0.366299E-1.*y(2).^5+(-0.557596E-1).*y(1).*y(2).^5+ ...
  0.19335E0.*y(1).^2.*y(2).^5+(-0.332257E-1).*y(1).^3.*y(2).^5+ ...
  0.142903E0.*y(1).^4.*y(2).^5+0.219817E-2.*y(1).^5.*y(2).^5+ ...
  0.916594E-1.*y(1).^6.*y(2).^5+(-0.175003E-1).*y(2).^6+( ...
  -0.335888E-1).*y(1).*y(2).^6+0.563633E-1.*y(1).^2.*y(2).^6+ ...
  0.117049E0.*y(1).^3.*y(2).^6+0.88531E-1.*y(1).^4.*y(2).^6+ ...
  0.150256E-1.*y(1).^5.*y(2).^6+(-0.114785E-1).*y(1).^6.*y(2).^6+ ...
  0.157754E-1.*y(2).^7+(-0.350007E-1).*y(1).*y(2).^7+0.137375E-1.*y( ...
  1).^2.*y(2).^7+(-0.207589E-1).*y(1).^3.*y(2).^7+0.722622E-1.*y(1) ...
  .^4.*y(2).^7+0.229571E-1.*y(1).^5.*y(2).^7+0.290959E-1.*y(1).^6.* ...
  y(2).^7+0.21684E-18.*y(2).^8+0.173472E-17.*y(1).^2.*y(2).^8+ ...
  0.173472E-17.*y(1).^4.*y(2).^8+(-0.21684E-18).*y(1).^6.*y(2).^8;

        for degree=degrees%this is actually the half of the degree
            degreeInt=1;
            x=sdpvar(n,1);
            y=sdpvar(n-1,1);
            degree*2;
            [rho,wrho] = polynomial(x,2*degree);
           
            f1 = F1(x);
            f2 = F2(x);
            g = G(x);
            div = jacobian( f1, x(1) )+...
                jacobian( f2, x(2) );
            fun = (g*rho*div+jacobian(rho,x)*[f1;f2]*g-rho*jacobian(g,x)*[f1;f2]);
            
            constr = [sos(fun),sos(rho-tolerance)];
           
            params = [wrho];
%             constr =
%             [sos(fun),sos(rho),sum(wrho)>=tolerance,wrho(1)>=tolerance];
%             params = [wrho];
%             constr = [sos(funRed),sos(rhoRed),sum(wrhoRed)>=toleranceRed];
%            params = [ wrhoRed];
            %options = sdpsettings('solver','sdpa');
            %options = sdpsettings('solver','sdpt3');
            options = sdpsettings('solver','sedumi','verbose',0,'sedumi.eps',eps,'sedumi.bigeps', ...
                bigeps,'sedumi.maxiter',maxiter);
            %options = sdpsettings('solver','mosek');
            [sol,~,~,~]=solvesos(constr,1,options,params);
            if sol.problem==0
                
                               
              
                break
            end
          
        end
 
display(double(wrho));


realparamB=double(wrho)
        x = sdpvar(1,1);y = sdpvar(1,1);
        vv = monolist([x; y],degree*2);
      
        Bpoly = sdisplay(round(realparamB,2)'*vv)
         B=eval(['@(x,y)' Bpoly{1}])
           
