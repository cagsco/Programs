clear; % clear CommandWindow and workspace
 sayac=0;
 AGS=zeros(3,1);
 eps=1e-8;% for sedumi
 bigeps=eps;% for sedumi
 maxiter=400;% for sedumi
 degrees=1:20;
 timescale=1;
 tolerance=0;
 


 n=2;%the dimension of the state space
 hold on
         G = @(y)(0.1E1+y(1).^2).^3.*(0.1E1+y(2).^2).^3;
  F1=@(y)(-0.442682E-1).*((-0.972995E-1)+0.134538E0.*y(1)+(-0.601915E0).*y( ...
  1).^2+0.510257E0.*y(1).^3+(-0.994253E0).*y(1).^4+0.808451E0.*y(1) ...
  .^5+(-0.489637E0).*y(1).^6+0.432731E0.*y(1).^7+0.567269E0.*y(2)+ ...
  0.425434E0.*y(1).*y(2)+0.729568E0.*y(1).^2.*y(2)+0.365519E0.*y(1) ...
  .^3.*y(2)+0.906624E0.*y(1).^4.*y(2)+(-0.103919E1).*y(1).^5.*y(2)+ ...
  0.744325E0.*y(1).^6.*y(2)+(-0.979274E0).*y(1).^7.*y(2)+( ...
  -0.149787E-1).*y(2).^2+0.194312E1.*y(1).*y(2).^2+0.109354E1.*y(1) ...
  .^2.*y(2).^2+0.190623E1.*y(1).^3.*y(2).^2+0.346683E1.*y(1).^4.*y( ...
  2).^2+0.200563E1.*y(1).^5.*y(2).^2+0.235831E1.*y(1).^6.*y(2).^2+ ...
  0.204252E1.*y(1).^7.*y(2).^2+0.75144E0.*y(2).^3+(-0.599149E-1).*y( ...
  1).*y(2).^3+0.416981E1.*y(1).^2.*y(2).^3+(-0.182616E1).*y(1).^3.* ...
  y(2).^3+0.225432E1.*y(1).^4.*y(2).^3+(-0.182616E1).*y(1).^5.*y(2) ...
  .^3+(-0.116405E1).*y(1).^6.*y(2).^3+(-0.599149E-1).*y(1).^7.*y(2) ...
  .^3+0.149787E-1.*y(2).^4+0.136109E1.*y(1).*y(2).^4+0.241823E1.*y( ...
  1).^2.*y(2).^4+0.590662E1.*y(1).^3.*y(2).^4+0.355671E1.*y(1).^4.* ...
  y(2).^4+0.600602E1.*y(1).^5.*y(2).^4+0.115346E1.*y(1).^6.*y(2).^4+ ...
  0.146049E1.*y(1).^7.*y(2).^4+0.567269E0.*y(2).^5+(-0.979274E0).*y( ...
  1).*y(2).^5+0.152475E1.*y(1).^2.*y(2).^5+(-0.103919E1).*y(1).^3.* ...
  y(2).^5+0.249699E1.*y(1).^4.*y(2).^5+0.365519E0.*y(1).^5.*y(2).^5+ ...
  0.153951E1.*y(1).^6.*y(2).^5+0.425434E0.*y(1).^7.*y(2).^5+ ...
  0.972995E-1.*y(2).^6+0.701807E0.*y(1).*y(2).^6+(-0.100439E0).*y(1) ...
  .^2.*y(2).^6+0.182897E1.*y(1).^3.*y(2).^6+(-0.410456E0).*y(1).^4.* ...
  y(2).^6+0.212716E1.*y(1).^5.*y(2).^6+(-0.212717E0).*y(1).^6.*y(2) ...
  .^6+0.1E1.*y(1).^7.*y(2).^6);

  F2=@(y)0.430727E-2+(-0.25112E-1).*y(1)+0.663081E-3.*y(1).^2+( ...
  -0.332649E-1).*y(1).^3+(-0.663081E-3).*y(1).^4+(-0.25112E-1).*y(1) ...
  .^5+(-0.430727E-2).*y(1).^6+(-0.595574E-2).*y(2)+(-0.188332E-1).* ...
  y(1).*y(2)+(-0.860184E-1).*y(1).^2.*y(2)+0.265232E-2.*y(1).^3.*y( ...
  2)+(-0.602532E-1).*y(1).^4.*y(2)+0.433507E-1.*y(1).^5.*y(2)+( ...
  -0.310677E-1).*y(1).^6.*y(2)+0.266457E-1.*y(2).^2+(-0.322967E-1).* ...
  y(1).*y(2).^2+(-0.484092E-1).*y(1).^2.*y(2).^2+(-0.18459E0).*y(1) ...
  .^3.*y(2).^2+(-0.107051E0).*y(1).^4.*y(2).^2+(-0.674979E-1).*y(1) ...
  .^5.*y(2).^2+0.444625E-2.*y(1).^6.*y(2).^2+(-0.225882E-1).*y(2) ...
  .^3+(-0.161809E-1).*y(1).*y(2).^3+(-0.843853E-1).*y(1).^2.*y(2) ...
  .^3+0.808408E-1.*y(1).^3.*y(2).^3+(-0.261476E0).*y(1).^4.*y(2).^3+ ...
  0.46003E-1.*y(1).^5.*y(2).^3+(-0.80965E-1).*y(1).^6.*y(2).^3+ ...
  0.440138E-1.*y(2).^4+(-0.401346E-1).*y(1).*y(2).^4+(-0.15347E0).* ...
  y(1).^2.*y(2).^4+(-0.997946E-1).*y(1).^3.*y(2).^4+(-0.157449E0).* ...
  y(1).^4.*y(2).^4+(-0.110537E0).*y(1).^5.*y(2).^4+0.181701E-1.*y(1) ...
  .^6.*y(2).^4+(-0.357887E-1).*y(2).^5+0.46003E-1.*y(1).*y(2).^5+( ...
  -0.887854E-1).*y(1).^2.*y(2).^5+0.808408E-1.*y(1).^3.*y(2).^5+( ...
  -0.265876E0).*y(1).^4.*y(2).^5+(-0.161809E-1).*y(1).^5.*y(2).^5+( ...
  -0.941655E-1).*y(1).^6.*y(2).^5+0.216753E-1.*y(2).^6+( ...
  -0.329499E-1).*y(1).*y(2).^6+(-0.104398E0).*y(1).^2.*y(2).^6+ ...
  0.515304E-1.*y(1).^3.*y(2).^6+(-0.510615E-1).*y(1).^4.*y(2).^6+( ...
  -0.681512E-1).*y(1).^5.*y(2).^6+0.94166E-2.*y(1).^6.*y(2).^6+( ...
  -0.191562E-1).*y(2).^7+0.433507E-1.*y(1).*y(2).^7+(-0.904186E-1).* ...
  y(1).^2.*y(2).^7+0.265232E-2.*y(1).^3.*y(2).^7+(-0.646534E-1).*y( ...
  1).^4.*y(2).^7+(-0.188332E-1).*y(1).^5.*y(2).^7+(-0.442682E-1).*y( ...
  1).^6.*y(2).^7+0.433681E-18.*y(2).^8+0.346945E-17.*y(1).^2.*y(2) ...
  .^8+0.346945E-17.*y(1).^3.*y(2).^8+0.346945E-17.*y(1).^4.*y(2).^8+ ...
  0.433681E-18.*y(1).^6.*y(2).^8;

        for degree=degrees%this is actually the half of the degree
            degreeInt=1;
            x=sdpvar(n,1);
            y=sdpvar(n-1,1);
            degree*2;
            [rho,wrho] = polynomial(x,2*degree);
           
            f1 = F1(x);
            f2 = F2(x);
            g = G(x);
            div = jacobian( f1, x(1) )+...
                jacobian( f2, x(2) );
            fun = (g*rho*div+jacobian(rho,x)*[f1;f2]*g-rho*jacobian(g,x)*[f1;f2]);
            
            constr = [sos(fun),sos(rho-tolerance)];
           
            params = [wrho];
%             constr =
%             [sos(fun),sos(rho),sum(wrho)>=tolerance,wrho(1)>=tolerance];
%             params = [wrho];
%             constr = [sos(funRed),sos(rhoRed),sum(wrhoRed)>=toleranceRed];
%            params = [ wrhoRed];
            %options = sdpsettings('solver','sdpa');
            %options = sdpsettings('solver','sdpt3');
            options = sdpsettings('solver','sedumi','verbose',0,'sedumi.eps',eps,'sedumi.bigeps', ...
                bigeps,'sedumi.maxiter',maxiter);
            %options = sdpsettings('solver','mosek');
            [sol,~,~,~]=solvesos(constr,1,options,params);
            if sol.problem==0
                
                               
              
                break
            end
          
        end
 
display(double(wrho));


realparamB=double(wrho)
        x = sdpvar(1,1);y = sdpvar(1,1);
        vv = monolist([x; y],degree*2);
      
        Bpoly = sdisplay(round(realparamB,5)'*vv)
         B=eval(['@(x,y)' Bpoly{1}])
           

