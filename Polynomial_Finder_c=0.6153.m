clear; % clear CommandWindow and workspace
 sayac=0;
 AGS=zeros(3,1);
 eps=1e-8;% for sedumi
 bigeps=eps;% for sedumi
 maxiter=400;% for sedumi
 degrees=1:20;
 timescale=1;
 tolerance=0;
 


 n=2;%the dimension of the state space
 hold on
         G = @(y)(0.1E1+y(1).^2).^3.*(0.1E1+y(2).^2).^3;
  F1=@(y)0.316583E-1.*((-0.123915E0)+(-0.304576E-1).*y(1)+(-0.842243E0).*y( ...
  1).^2+0.613695E0.*y(1).^3+(-0.131573E1).*y(1).^4+0.115938E1.*y(1) ...
  .^5+(-0.597404E0).*y(1).^6+0.515229E0.*y(1).^7+0.484771E0.*y(2)+ ...
  0.693169E0.*y(1).*y(2)+0.120488E1.*y(1).^2.*y(2)+0.209472E0.*y(1) ...
  .^3.*y(2)+(-0.849941E-3).*y(1).^4.*y(2)+(-0.16785E1).*y(1).^5.*y( ...
  2)+(-0.720956E0).*y(1).^6.*y(2)+(-0.119481E1).*y(1).^7.*y(2)+( ...
  -0.120924E0).*y(2).^2+0.642835E0.*y(1).*y(2).^2+0.197477E1.*y(1) ...
  .^2.*y(2).^2+0.545742E1.*y(1).^3.*y(2).^2+0.435717E1.*y(1).^4.*y( ...
  2).^2+0.563931E1.*y(1).^5.*y(2).^2+0.226148E1.*y(1).^6.*y(2).^2+ ...
  0.824731E0.*y(1).^7.*y(2).^2+0.128831E1.*y(2).^3+(-0.483696E0).*y( ...
  1).*y(2).^3+0.22711E1.*y(1).^2.*y(2).^3+(-0.15109E1).*y(1).^3.*y( ...
  2).^3+0.386492E1.*y(1).^4.*y(2).^3+(-0.15109E1).*y(1).^5.*y(2).^3+ ...
  0.288212E1.*y(1).^6.*y(2).^3+(-0.483696E0).*y(1).^7.*y(2).^3+ ...
  0.120924E0.*y(2).^4+0.20839E1.*y(1).*y(2).^4+0.274517E1.*y(1).^2.* ...
  y(2).^4+0.499915E1.*y(1).^3.*y(2).^4+0.508271E1.*y(1).^4.*y(2).^4+ ...
  0.518105E1.*y(1).^5.*y(2).^4+0.245847E1.*y(1).^6.*y(2).^4+ ...
  0.226579E1.*y(1).^7.*y(2).^4+0.484771E0.*y(2).^5+(-0.119481E1).*y( ...
  1).*y(2).^5+0.266004E1.*y(1).^2.*y(2).^5+(-0.16785E1).*y(1).^3.*y( ...
  2).^5+0.290948E1.*y(1).^4.*y(2).^5+0.209472E0.*y(1).^5.*y(2).^5+ ...
  0.734208E0.*y(1).^6.*y(2).^5+0.693169E0.*y(1).^7.*y(2).^5+ ...
  0.123915E0.*y(2).^6+0.454314E0.*y(1).*y(2).^6+(-0.101746E0).*y(1) ...
  .^2.*y(2).^6+0.238677E1.*y(1).^3.*y(2).^6+(-0.572245E0).*y(1).^4.* ...
  y(2).^6+0.293246E1.*y(1).^5.*y(2).^6+(-0.346584E0).*y(1).^6.*y(2) ...
  .^6+0.1E1.*y(1).^7.*y(2).^6);

  F2=@(y)0.316583E-1.*((-0.123915E0)+0.484771E0.*y(1)+(-0.120924E0).*y(1) ...
  .^2+0.128831E1.*y(1).^3+0.120924E0.*y(1).^4+0.484771E0.*y(1).^5+ ...
  0.123915E0.*y(1).^6+(-0.304576E-1).*y(2)+0.693169E0.*y(1).*y(2)+ ...
  0.642835E0.*y(1).^2.*y(2)+(-0.483696E0).*y(1).^3.*y(2)+0.20839E1.* ...
  y(1).^4.*y(2)+(-0.119481E1).*y(1).^5.*y(2)+0.454314E0.*y(1).^6.*y( ...
  2)+(-0.842243E0).*y(2).^2+0.120488E1.*y(1).*y(2).^2+0.197477E1.*y( ...
  1).^2.*y(2).^2+0.22711E1.*y(1).^3.*y(2).^2+0.274517E1.*y(1).^4.*y( ...
  2).^2+0.266004E1.*y(1).^5.*y(2).^2+(-0.101746E0).*y(1).^6.*y(2) ...
  .^2+0.613695E0.*y(2).^3+0.209472E0.*y(1).*y(2).^3+0.545742E1.*y(1) ...
  .^2.*y(2).^3+(-0.15109E1).*y(1).^3.*y(2).^3+0.499915E1.*y(1).^4.* ...
  y(2).^3+(-0.16785E1).*y(1).^5.*y(2).^3+0.238677E1.*y(1).^6.*y(2) ...
  .^3+(-0.131573E1).*y(2).^4+(-0.849941E-3).*y(1).*y(2).^4+ ...
  0.435717E1.*y(1).^2.*y(2).^4+0.386492E1.*y(1).^3.*y(2).^4+ ...
  0.508271E1.*y(1).^4.*y(2).^4+0.290948E1.*y(1).^5.*y(2).^4+( ...
  -0.572245E0).*y(1).^6.*y(2).^4+0.115938E1.*y(2).^5+(-0.16785E1).* ...
  y(1).*y(2).^5+0.563931E1.*y(1).^2.*y(2).^5+(-0.15109E1).*y(1).^3.* ...
  y(2).^5+0.518105E1.*y(1).^4.*y(2).^5+0.209472E0.*y(1).^5.*y(2).^5+ ...
  0.293246E1.*y(1).^6.*y(2).^5+(-0.597404E0).*y(2).^6+(-0.720956E0) ...
  .*y(1).*y(2).^6+0.226148E1.*y(1).^2.*y(2).^6+0.288212E1.*y(1).^3.* ...
  y(2).^6+0.245847E1.*y(1).^4.*y(2).^6+0.734208E0.*y(1).^5.*y(2).^6+ ...
  (-0.346584E0).*y(1).^6.*y(2).^6+0.515229E0.*y(2).^7+(-0.119481E1) ...
  .*y(1).*y(2).^7+0.824731E0.*y(1).^2.*y(2).^7+(-0.483696E0).*y(1) ...
  .^3.*y(2).^7+0.226579E1.*y(1).^4.*y(2).^7+0.693169E0.*y(1).^5.*y( ...
  2).^7+0.1E1.*y(1).^6.*y(2).^7+0.136988E-16.*y(2).^8+( ...
  -0.547952E-16).*y(1).^2.*y(2).^8+(-0.547952E-16).*y(1).^4.*y(2) ...
  .^8);

        for degree=degrees%this is actually the half of the degree
            degreeInt=1;
            x=sdpvar(n,1);
            y=sdpvar(n-1,1);
            degree*2;
            [rho,wrho] = polynomial(x,2*degree);
           
            f1 = F1(x);
            f2 = F2(x);
            g = G(x);
            div = jacobian( f1, x(1) )+...
                jacobian( f2, x(2) );
            fun = (g*rho*div+jacobian(rho,x)*[f1;f2]*g-rho*jacobian(g,x)*[f1;f2]);
            
            constr = [sos(fun),sos(rho-tolerance)];
           
            params = [wrho];
%             constr =
%             [sos(fun),sos(rho),sum(wrho)>=tolerance,wrho(1)>=tolerance];
%             params = [wrho];
%             constr = [sos(funRed),sos(rhoRed),sum(wrhoRed)>=toleranceRed];
%            params = [ wrhoRed];
            %options = sdpsettings('solver','sdpa');
            %options = sdpsettings('solver','sdpt3');
            options = sdpsettings('solver','sedumi','verbose',0,'sedumi.eps',eps,'sedumi.bigeps', ...
                bigeps,'sedumi.maxiter',maxiter);
            %options = sdpsettings('solver','mosek');
            [sol,~,~,~]=solvesos(constr,1,options,params);
            if sol.problem==0
                
                               
              
                break
            end
          
        end
 
display(double(wrho));


realparamB=double(wrho)
        x = sdpvar(1,1);y = sdpvar(1,1);
        vv = monolist([x; y],degree*2);
      
        Bpoly = sdisplay(round(realparamB,2)'*vv)
         B=eval(['@(x,y)' Bpoly{1}])
           